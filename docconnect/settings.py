"""
Django settings for docconnect project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import pymysql
pymysql.install_as_MySQLdb()

from decouple import config
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'appointments',
    'patients'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'appointments.middleware.GAVInitMiddleware',
]

ROOT_URLCONF = 'docconnect.urls'

import os
TEMPLATES_DIR =os.path.join(BASE_DIR, 'templates')
STATIC_DIR =os.path.join(BASE_DIR, 'static')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'docconnect.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     },

#     'hospital1': {
#      'ENGINE': 'django.db.backends.postgresql',
#      'NAME': 'hospital1',
#      'USER': 'postgres',
#      'PASSWORD': '8077',
#      'HOST': '192.168.41.220',
#       #  or 
#     #  'HOST': 'local_host',
#      'PORT': '5433',
#     },

   
#   'hospital2': {
#     'ENGINE': 'django.db.backends.mysql',
#     'NAME': 'hospital2',
#     'USER': 'root',
#     'PASSWORD': '1234',
#     'HOST': '192.168.41.97',
#     'PORT': '3306',
#     'OPTIONS': {
#         'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         'ssl': {
#             'disable': True,
#             'verify_cert': False,
#             'ssl_mode': 'DISABLED'
#         }
#     }
# },


# 'hospital3': {
#     'ENGINE': 'django.db.backends.mysql',
#     'NAME': 'hospital3',
#     'USER': 'root',
#     'PASSWORD': 'Share@123',
#     'HOST': '192.168.41.204',
#     'PORT': '3306',
#     'OPTIONS': {
#         'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         'ssl': {
#             'disable': True,
#             'verify_cert': False,
#             'ssl_mode': 'DISABLED'
#         }
#     }
# },

#     # 'nptel': {
     
#     #  'ENGINE': 'django.db.backends.mysql',
#     #  'NAME': 'nptel',
#     #  'USER': 'root',
#     #  'PASSWORD': 'Khan7896',
#     #  'HOST': '192.168.41.247',
#     # #  or 
#     # #  'HOST': 'local_host',
#     # #  'PORT': '5433',
#     # },

# }


DATABASES = {

    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },

    'hospital1_2lrw': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'hospital1_2lrw',
        'USER': config('HOSPITAL1_DB_USER'),
        'PASSWORD': config('HOSPITAL1_DB_PASSWORD'),
        'HOST': config('HOSPITAL1_DB_HOST'),
        'PORT': config('HOSPITAL1_DB_PORT'),
    },

    'hospital2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Hospital2',
        'USER': config('HOSPITAL2_DB_USER'),
        'PASSWORD': config('HOSPITAL2_DB_PASSWORD'),
        'HOST': config('HOSPITAL2_DB_HOST'),
        'PORT': config('HOSPITAL2_DB_PORT'),
        'OPTIONS': {
            'ssl': {'ca': str(BASE_DIR / 'CA_Hospital2.pem')}
        }
    },

    'hospital3': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'Hospital3',
        'USER': config('HOSPITAL3_DB_USER'),
        'PASSWORD': config('HOSPITAL3_DB_PASSWORD'),
        'HOST': config('HOSPITAL3_DB_HOST'),
        'PORT': config('HOSPITAL3_DB_PORT'),
        'OPTIONS': {
            'ssl': {'ca': str(BASE_DIR / 'CA_Hospital3.pem')}
        }
    },

}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS=[
    STATIC_DIR,
]


CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "unique-gav-mapping-cache",
    }
}

